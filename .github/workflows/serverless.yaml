name: Pipeline
on:
  push:
    branches:
  workflow_dispatch:

jobs:
  run-test:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          SERVICES: s3, ssm, secretsmanager
          DEFAULT_REGION: ${{secrets.AWS_REGION}}
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
        ports:
          - 4566:4566
          - 4571:4571
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          npm i
      # Execute Tests lambda
      - name: Run test for sample lambda
        run: |
          npm run test

  dev_plan:
    name: plan dev
    runs-on: ubuntu-latest
    needs: run-test
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check Node Version
        run: |
          node --version

      - name: Check NPM Version
        run: |
          npm --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log AWS Account
        run: |
          aws sts get-caller-identity --output text

  dev_deploy:
    name: deploy dev
    environment: dev
    runs-on: ubuntu-latest
    needs:
      - "dev_plan"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Install dependencies
        run: |
          export BASE_DIR=$(pwd)
          cd $BASE_DIR
          npm i

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: -c "serverless deploy --stage dev --region ${{secrets.AWS_REGION}}"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DEV_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_DEV_AUDIENCE }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_DEV_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_DEV_CLIENT_SECRET }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT_DEV }}

  uat_plan:
    name: plan uat
    runs-on: ubuntu-latest
    needs: run-test
    environment: uat
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check Node Version
        run: |
          node --version

      - name: Check NPM Version
        run: |
          npm --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log AWS Account
        run: |
          aws sts get-caller-identity --output text

  uat_deploy:
    name: deploy uat
    environment: uat
    runs-on: ubuntu-latest
    needs:
      - "uat_plan"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Install dependencies
        run: |
          export BASE_DIR=$(pwd)
          cd $BASE_DIR
          npm i

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: -c "serverless deploy --stage uat --region ${{secrets.AWS_REGION}}"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_UAT_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_UAT_AUDIENCE }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_UAT_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_UAT_CLIENT_SECRET }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT_UAT }}

  prod_plan:
    name: plan prod
    runs-on: ubuntu-latest
    needs: run-test
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check Node Version
        run: |
          node --version

      - name: Check NPM Version
        run: |
          npm --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log AWS Account
        run: |
          aws sts get-caller-identity --output text

  prod_deploy:
    name: deploy prod
    environment: prod
    runs-on: ubuntu-latest
    needs:
      - "prod_plan"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Install dependencies
        run: |
          export BASE_DIR=$(pwd)
          cd $BASE_DIR
          npm i

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: -c "serverless deploy --stage prod --region ${{secrets.AWS_REGION}}"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
